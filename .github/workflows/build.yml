name: Build Docker Image and Deploy to EC2 Instance

on:
  push:
    branches:
      - main

jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    concurrency: build-docker
    outputs:
      ec2_ips: ${{ steps.instance_ips.outputs.ips }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup docker build
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}


      - name: Build and Push Container
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/expenelixir:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get EC2 Instance IPs
        id: instance_ips
        run: | 
          instances=$(aws ec2 describe-instances --filters 'Name=tag:aws:autoscaling:groupName,Values=ExpenElixir-ASG' --query 'Reservations[*].Instances[*].PublicIpAddress' --output json | jq -c .)
          echo "ips=$instances" >> $GITHUB_OUTPUT
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_REGION: eu-west-2

      - name: Debug IPs Output
        run: |
          echo "IPs Output: ${{ steps.instance_ips.outputs.ec2_ips }}"

  deploy:
    needs: ["build-image"]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ip: ${{ fromJson(needs.build-image.outputs.ec2_ips) }}
    steps:
      - uses: actions/checkout@v2

      - name: configure docker host
        uses: khaledez/configure-docker-host@v1
        with:
          host: ${{ matrix.ip }}
          user: github
          ssh-private-key: ${{ secrets.DEPLOYMENT_KEY }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Deploy
        run: |
          docker compose -f docker-compose.yml up -d
        env:
          DEPLOYMENT_KEY: ${{ secrets.DEPLOYMENT_KEY }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER_NAME: ${{ secrets.DB_USER_NAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          CHATGPTAPI_SECRET_KEY: ${{ secrets.CHATGPTAPI_SECRET_KEY }}
          FREE_CURRENCY_API: ${{ secrets.FREE_CURRENCY_API }}
