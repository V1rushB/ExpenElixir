name: Build Docker Image and Deploy to EC2 Instance

on:
  push:
    branches: 
      - main

permissions:
  contents: read
  packages: write

jobs:
  build-image:
    runs-on: ubuntu-latest
    concurrency: build-docker
    outputs:
      image_version: ${{ steps.image_version.outputs.gitsha }}
      ec2_ips: ${{ steps.instance_ips.outputs.ips }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup docker build
        uses: docker/setup-buildx-action@v2

      - name: Setup Version
        id: image_version
        run: echo "gitsha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Container
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/expenelixir:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/expenelixir:${{ steps.image_version.outputs.gitsha }}



      - name : Get EC2 Instance IPs
        id: instance_ips
        run: 
          ips=$(aws ec2 describe-instances --filters "Name=tag:aws:autoscaling:groupName,Values=ExpenElixir-ASG" --query "Reservations[*].Instances[*].PublicIpAddress" --output=text)" >> $GITHUB_OUTPUT
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: eu-west-2
  deploy:
    needs: build-image
    runs-on: ubuntu-latest

    strategy:
      matrix:
        ip: ${{fromJson(needs.build)}}
      steps:
        - uses: actions/checkout@v2

        - name: configure docker host
          uses: khaledez/configure-docker-host@v1
          with:
            host: ${{ matrix.ip }}
            user: ubuntu
            ssh-private-key: ${{ secrets.DEPLOYMENT_KEY }}
        
        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}

        - name: deploy
          run: docker compose -f docker-compose.yml up -d
          env:
            DB_HOST: ${{ secrets.DB_HOST }}
            DB_PORT: ${{ secrets.DB_PORT }}
            DB_USER_NAME: ${{ secrets.DB_USER_NAME }}
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
            DB_NAME: ${{ secrets.DB_NAME }}
            SECRET_KEY: {{ secrets.SECRET_KEY }}
            STRIPE_SECRET_KEY: {{ secrets.STRIPE_SECRET_KEY }}
            CHATGPTAPI_SECRET_KEY: ${{ secrets.CHATGPTAPI_SECRET_KEY }}
            FREE_CURRENCY_API: ${{ secrets.FREE_CURRENCY_API }}
            VERSION: ${{ steps.build-image.outputs.image_version }}