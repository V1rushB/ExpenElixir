name: Build Docker Image and Deploy to EC2 Instance

on:
  push:
    branches: 
      - main

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-image:
    runs-on: ubuntu-latest
    concurrency: build-docker
    outputs:
      image_version: ${{ steps.image_version.outputs.githash }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Setup docker build
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Container
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/expenelixir:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max


      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: eu-west-2

      - name: Scale Down ASG to 0
        run: aws autoscaling update-auto-scaling-group --auto-scaling-group-name "ExpenElixir-ASG" --min-size 0 --max-size 0 --desired-capacity 0

      - name: Restore ASG to Original Size
        run: aws autoscaling update-auto-scaling-group --auto-scaling-group-name "ExpenElixir-ASG" --min-size 2 --max-size 3 --desired-capacity 2

  deploy-image:
    needs: build-image
    uses: ./.github/workflows/deploy.yml
    with:
      instance_ip: ${{ vars.INSTANCE_IP }}
      image_version: ${{ needs.build-image.outputs.image_version }}
    secrets: inherit
