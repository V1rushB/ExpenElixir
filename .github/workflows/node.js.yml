name: Docker Image CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push the Docker image
      run: |
        docker build . --file Dockerfile --tag ${{ secrets.DOCKERHUB_USERNAME }}/expenelixir
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/expenelixir

  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with: 
        aws-access-key: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: eu-west-2
    
    - name: Get EC2 Instances IPs
      run: |
        instance_ids=$(aws autoscaling describe-auto-scaling-instances --region eu-west-2 --output text --query "AutoScalingInstances[?AutoScalingGroupName=='Your-ASG-Name'].InstanceId")
        public_ips=""
        for id in $instance_ids; do
          ip=$(aws ec2 describe-instances --instance-ids $id --query 'Reservations[].Instances[].PublicIpAddress' --output text)
          public_ips+="$ip "
        done
        echo "Public IPs: $public_ips"

    - name: Deploy to EC2 instances
      run: |
        for ip in $public_ips; do
          ssh -i 'key.pem' -o StrictHostKeyChecking=no ubuntu@$ip 'docker pull ${{ secrets.DOCKERHUB_USERNAME }}/expenelixir && docker run --name ExpenElixirX -d -p 80:2077 ${{ secrets.DOCKERHUB_USERNAME }}/expenelixir:latest'
        done
